{
    "version": "https://jsonfeed.org/version/1",
    "title": "Tecnologia - Dados - Inteligência Artificial",
    "subtitle": "baby baby do biruleibe leibe",
    "icon": "http://vithor.tech/images/favicon.ico",
    "description": "Estudante de Data Science",
    "home_page_url": "http://vithor.tech",
    "items": [
        {
            "id": "http://vithor.tech/computer-science/Python/Untitled/",
            "url": "http://vithor.tech/computer-science/Python/Untitled/",
            "title": "Python: Nuvem de Palavras",
            "date_published": "2021-06-01T14:36:00.000Z",
            "content_html": "<h1 id=\"python-nuvem-de-palavras\"><a class=\"anchor\" href=\"#python-nuvem-de-palavras\">#</a> Python: Nuvem de Palavras</h1>\n<h3 id=\"o-que-é-uma-nuvem-de-palavras\"><a class=\"anchor\" href=\"#o-que-é-uma-nuvem-de-palavras\">#</a> O que é uma Nuvem de Palavras?</h3>\n<p>Nuvem de Palavras é uma representação gráfica de um conjunto de dados textual. Funciona de maneira simples: quanto mais uma palavra se repete em uma fonte de dados textual, maior e mais destacada ela aparece em uma nuvem de palavras.</p>\n<h3 id=\"pré-requisitos\"><a class=\"anchor\" href=\"#pré-requisitos\">#</a> Pré-requisitos</h3>\n<ul>\n<li></li>\n</ul>\n",
            "tags": [
                "Ciência-da-Computação",
                "Python"
            ]
        },
        {
            "id": "http://vithor.tech/computer-science/projetos/Lista-De-Projetos/",
            "url": "http://vithor.tech/computer-science/projetos/Lista-De-Projetos/",
            "title": "",
            "date_published": "2021-06-01T11:33:06.995Z",
            "content_html": "<hr />\n<p>title: Lista De Projetos<br />\ndate: 2020/08/13 20:45:48<br />\nupdate: 2020/09/27<br />\ncategories:</p>\n<ul>\n<li>[Ciência-da-Computação,Projetos, Lista-Projetos]<br />\ntags:</li>\n<li>Projetos</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://vithor.tech/computer-science/Resumos%20Bin%C3%A1rios/api/",
            "url": "http://vithor.tech/computer-science/Resumos%20Bin%C3%A1rios/api/",
            "title": "API - Resumo",
            "date_published": "2021-03-28T19:43:00.000Z",
            "content_html": "<h1 id=\"resumo-sobre-api\"><a class=\"anchor\" href=\"#resumo-sobre-api\">#</a> Resumo Sobre API</h1>\n<h2 id=\"o-que-é-api\"><a class=\"anchor\" href=\"#o-que-é-api\">#</a> O que é API:</h2>\n<p><strong>API</strong> - Acrônimo do inglês &quot;Application Programming Interface&quot; é um conjunto pré-estabelecido de funções, interações ou protocolos que podem ser consumidos por aplicações distintas. Simplificando, APIs permitem que recursos de um software seja usado por outros. São um meio pelo qual dois programas diferentes podem se comunicar.</p>\n<p>-Ok! Mas o que isso significa exatamente?</p>\n<p>Bom, vamos imaginar que um videogame seria o seu software. E tivesse uma API que incluísse informações sobre o que você pode fazer e como utilizar o videogame(o famoso manual de instruções):</p>\n<ul>\n<li>\n<p>Inserir o CD</p>\n</li>\n<li>\n<p>Ligar</p>\n</li>\n<li>\n<p>Desligar</p>\n</li>\n<li>\n<p>Dar Start</p>\n</li>\n</ul>\n<p>Ela forneceu informações e como usar no seu software, essas informações se completam, tornam seu software útil. Afinal, o usuário precisa saber dar start para jogar não é?<br />\nAPI não precisa explicar o que acontece dentro do videogame quando você da start em um jogo, você pode simplesmente consumir ela sem conhecer os detalhes da implementação de software.</p>\n<p>-Ainda não entendi, pode me dar outro exemplo? - Claro!</p>\n<p>Um exemplo de uso de API é esse site, as imagens no background do site estão sendo geradas por meio de uma API, que eu posso até ter uma ideia de como é feita, porém, eu só preciso saber as informaçõesque ela me fornece - no caso, as imagens. Pois ela complementa e exerce um papel útil para meu software, que é gerar artes aleatórias que vem de algum banco de imagens da internet.</p>\n<p>Segundo a empresa Red Hat, as APIs podem se dividir entre 03 tipos:</p>\n<blockquote>\n<h4 id=\"api-privada\"><a class=\"anchor\" href=\"#api-privada\">#</a> <strong>API Privada</strong></h4>\n<p>A API é usada apenas internamente. Isso oferece às empresas um maior controle.</p>\n<h4 id=\"api-de-parceiros\"><a class=\"anchor\" href=\"#api-de-parceiros\">#</a> <strong>API de Parceiros</strong></h4>\n<p>A API é compartilhada com parceiros de negócios específicos. Isso pode fornecer fluxos de receita adicionais sem comprometer a qualidade.</p>\n<h4 id=\"api-pública\"><a class=\"anchor\" href=\"#api-pública\">#</a> <strong>API Pública</strong></h4>\n<p>A API é disponibilizada para todos. Terceiros podem desenvolver aplicações que interajam com a sua API e isso pode se tornar uma fonte de inovação.</p>\n</blockquote>\n<h2 id=\"exemplos-reais-de-api\"><a class=\"anchor\" href=\"#exemplos-reais-de-api\">#</a> Exemplos reais de API</h2>\n<p>Hoje em dia temos APIs em todos os cantos da internet, em algum momento, na última semana com certeza já utilizamos vários serviços que dependem do seu uso. Agora vamos ver alguns exemplos reais de grandes empresas que utilizam e disponibilizam APIs.</p>\n<h3 id=\"apis-do-google\"><a class=\"anchor\" href=\"#apis-do-google\">#</a> APIs do Google</h3>\n<ul>\n<li>As <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vYXBpcy1leHBsb3Jlcg==\">Google APIs</span> permitem conectar o seu software a toda uma variedade de serviços; Tradutor, Maps, etc.</li>\n<li>O Google Maps é utilizado em diversos sites de viagem e hospedagem de hotel.</li>\n<li>Podemos consumir dados da API do Youtube e criar Data Frames com eles como é mostrado nesse vídeo do canal<span class=\"exturl\" data-url=\"aHR0cHM6Ly95b3V0dS5iZS9vbERDSjF3M0ZMTQ==\">Programação Dinâmica.</span></li>\n</ul>\n<h3 id=\"apis-do-twitter\"><a class=\"anchor\" href=\"#apis-do-twitter\">#</a> APIs do Twitter</h3>\n<ul>\n<li>Um exemplo de uso das <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIudHdpdHRlci5jb20vZW4vZG9jcy90d2l0dGVyLWFwaQ==\">Twitter APis</span> é a interação com tweets, no qual podemos pesquisar por posts, criar novos posts, pesquisar por usuários e muitas outras funcionalidades. A forma de fazer isso também é informada. Para consumir as APIs você precisa especificar os seus parâmetros de pesquisa: geolocalização, idioma, hashtags, etc.</li>\n<li>A API do Twitter é usada em vários projetos de análise de sentimentos, que dizem por meio dos tweets se às pessoas estão felizes ou triste sobre um produto X por exemplo.</li>\n</ul>\n<h3 id=\"apis-do-ifood\"><a class=\"anchor\" href=\"#apis-do-ifood\">#</a> APIs do Ifood</h3>\n<ul>\n<li>Muitos sistemas de restaurantes fazem a implementação das <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuaWZvb2QuY29tLmJyL3JlZmVyZW5jZSNub3ZpZGFkZXM=\">Ifood APis</span> para ter funcionalidades de delivery como; acompanhamento de entrega, pedidos online, pagamentos, criação de app e outras funcionalidades que são importantíssimas para os negócios.</li>\n<li>Ifood permite que Software Houses se tornem parceiras para que possam fazer essa integração por meio da API em seus sistemas.</li>\n</ul>\n<h2 id=\"lista-de-apis-públicas-4fun\"><a class=\"anchor\" href=\"#lista-de-apis-públicas-4fun\">#</a> Lista de APIs públicas (4fun)</h2>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnRoZWNhdGFwaS5jb20v\">The Cat Api</span> - Retorna fotos de gatinhos.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90aGUtb25lLWFwaS5kZXYvZG9jdW1lbnRhdGlvbg==\">The One API</span> - API que contém dados sobre Senhor Dos Anéis e o universo Tolkien.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZXRvZ2FtZS5jb20vYXBpLWRvYw==\">Free-To-Play Games Database API</span> - Banco de dados JSON de todos os jogos gratuitos disponíveis na Internet para jogar.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuc3BvdGlmeS5jb20vZG9jdW1lbnRhdGlvbi93ZWItYXBpLw==\">Spotify API</span> - Busque dados do catálogo de música do Spotify, gerencie as listas de reprodução dos usuários e músicas salvas.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2NyYXBpbmdkb2cuY29tLw==\">Scraping Dog API</span> - Retorna dados html de qualquer página da web em uma única chamada da API.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb3J1bHkuZ2l0aHViLmlvL3RyYWNlLm1vZS8jLw==\">trace.moe API</span> - Faz um scan de uma imagem de um anime e retorna informações sobre.</li>\n</ul>\n<p>Para encontrar mais APIs públicas acesse: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wdWJsaWMtYXBpcy5pby8=\">public-apis.io</span></p>\n<h3 id=\"referências\"><a class=\"anchor\" href=\"#referências\">#</a> Referências</h3>\n<p>Red Hat. INTERFACE DE PROGRAMAÇÃO DE APLICAÇÕES. O que é API? Disponível em: &lt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucmVkaGF0LmNvbS9wdC1ici90b3BpY3MvYXBpL3doYXQtYXJlLWFwcGxpY2F0aW9uLXByb2dyYW1taW5nLWludGVyZmFjZXM=\">https://www.redhat.com/pt-br/topics/api/what-are-application-programming-interfaces</span>&gt;Acesso em: 27 mar. 2021</p>\n<p>Public APIs. Play around with these free &amp; public APIs with your side projects. Disponível em: &lt;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wdWJsaWMtYXBpcy5pby8=\">https://public-apis.io/</span>&gt; Acesso em: 28 mar. 2021</p>\n",
            "tags": [
                "API"
            ]
        },
        {
            "id": "http://vithor.tech/computer-science/projetos/lista-projetos/Jogo-Resilia/",
            "url": "http://vithor.tech/computer-science/projetos/lista-projetos/Jogo-Resilia/",
            "title": "Jogo Resilia",
            "date_published": "2020-08-13T23:45:48.000Z",
            "content_html": "",
            "tags": [
                "Ciência-da-Computação",
                "Projetos",
                "Lista-Projetos",
                "Projetos"
            ]
        },
        {
            "id": "http://vithor.tech/computer-science/projetos/lista-projetos/Py-Help-Bot/",
            "url": "http://vithor.tech/computer-science/projetos/lista-projetos/Py-Help-Bot/",
            "title": "PyHelp Discord Bot",
            "date_published": "2020-08-13T23:45:48.000Z",
            "content_html": "",
            "tags": [
                "Ciência-da-Computação",
                "Projetos",
                "Lista-Projetos",
                "Python",
                "Projetos"
            ]
        },
        {
            "id": "http://vithor.tech/computer-science/Python/2021-03-25/",
            "url": "http://vithor.tech/computer-science/Python/2021-03-25/",
            "title": "Python: Objetos básicos",
            "date_published": "2020-04-13T22:12:45.000Z",
            "content_html": "<h1 id=\"os-fundamentos-do-python-objetos-básicos\"><a class=\"anchor\" href=\"#os-fundamentos-do-python-objetos-básicos\">#</a> Os fundamentos do Python: Objetos básicos</h1>\n<p>Os fundamentos do Python: Objetos básicos</p>\n<p>O termo “objeto” em Python é bastante abrangente; inclui números, strings(sequência de caracteres), funções, listas — de forma geral um objeto em Python é tudo o que você pode atribuir a uma variável. Dessa forma, fica evidente a existência de diferentes tipos de objetos.</p>\n<p>Neste Post, vamos cobrir o uso básico e introdutório dos seguintes objetos:</p>\n<ul>\n<li>\n<p>Números</p>\n</li>\n<li>\n<p>Booleanos</p>\n</li>\n<li>\n<p>Strings</p>\n</li>\n<li>\n<p>Listas</p>\n</li>\n</ul>\n<h2 id=\"tipos-de-números\"><a class=\"anchor\" href=\"#tipos-de-números\">#</a> Tipos de números</h2>\n<p>Em Python temos três tipos fundamentais de números: <strong>int</strong>(inteiros), <strong>float</strong>(ponto flutuante) e <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvcHQtYnIvMy9saWJyYXJ5L2NtYXRoLmh0bWwjbW9kdWxlLWNtYXRo\">números complexos</span>. Os símbolos matemáticos que já nos são familiares podem ser usados para realizar operações aritmética em todos esses números.</p>\n<p>&lt;iframe src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhL2ZmMmYxYWQ3MTA3OTk3MTA2M2ZhMWRmYjA4OWM2ZmUw\">https://medium.com/media/ff2f1ad71079971063fa1dfb089c6fe0</span>&quot; frameborder=0&gt;&lt;/iframe&gt;</p>\n<p>As operações matemáticas em Python obedecem às lógicas matemáticas que usamos no dia-a-dia. Vamos exemplificar com objetos inteiros, flutuantes e booleanos:</p>\n<p>&lt;iframe src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzc0YmEwODA4ZGU2NzlhYmIxNTBmYWQ0YmQ2MTU5Yjg2\">https://medium.com/media/74ba0808de679abb150fad4bd6159b86</span>&quot; frameborder=0&gt;&lt;/iframe&gt;</p>\n<h3 id=\"tipo-inteiro\"><a class=\"anchor\" href=\"#tipo-inteiro\">#</a> Tipo Inteiro</h3>\n<p>Como já conhecemos da matemática os inteiros são: … 1, 2, 3, 10, 20, 1991 … .</p>\n<p>Os inteiros são representados pelo tipo <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvcHQtYnIvMy9saWJyYXJ5L2Z1bmN0aW9ucy5odG1s\">built-in</span>(embutido) *<em>int</em>, ***que também é usado para converter objetos em inteiros.</p>\n<p>&lt;iframe src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhL2UyYmY3NWY3ZDg0MTQ1OWQxZmFjYmE2MWVlOTUwZTQ5\">https://medium.com/media/e2bf75f7d841459d1facba61ee950e49</span>&quot; frameborder=0&gt;&lt;/iframe&gt;</p>\n<h3 id=\"tipo-float\"><a class=\"anchor\" href=\"#tipo-float\">#</a> Tipo Float</h3>\n<p>Um tipo <strong>float</strong> é um número com uma vírgula decimal. Os <strong>float</strong> são representados pelo tipo built-in *<em>float</em>, ***que é usado para converter objetos em <strong>float</strong>.</p>\n<p>&lt;iframe src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzI0NDEzMTcwOWU1NDdjYjQ2MjE2YzRiNGZlYjgyN2I4\">https://medium.com/media/244131709e547cb46216c4b4feb827b8</span>&quot; frameborder=0&gt;&lt;/iframe&gt;</p>\n<h2 id=\"booleanos\"><a class=\"anchor\" href=\"#booleanos\">#</a> Booleanos</h2>\n<p>Existem dois tipos únicos de objetos booleanos; <strong>True</strong> e <strong>False</strong>. Eles pertencem ao tipo built-in <strong>Bool.</strong></p>\n<p>&lt;iframe src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzUxMGNhN2UyY2Q4MGFmMDY5MGEyZDdlMTZkNWYwNGUx\">https://medium.com/media/510ca7e2cd80af0690a2d7e16d5f04e1</span>&quot; frameborder=0&gt;&lt;/iframe&gt;</p>\n<p><strong>True</strong> e **False <strong>devem</strong> **ser especificados com letra maiúscula em Python.</p>\n<p>Os dois objetos booleanos True e False são inteiros e estão associados aos valores 1 e 0, respectivamente:</p>\n<p>&lt;iframe src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzM0ZDI0NDhmNjQ4NTEyOTAwNmEwY2I3ZjgyYzVhMzA3\">https://medium.com/media/34d2448f6485129006a0cb7f82c5a307</span>&quot; frameborder=0&gt;&lt;/iframe&gt;</p>\n<h2 id=\"strings\"><a class=\"anchor\" href=\"#strings\">#</a> <strong>Strings</strong></h2>\n<p>O tipo de string é usado para armazenar caracteres. Uma string pode ser formada usando:</p>\n<ul>\n<li>\n<p>aspas simples: 'Python é muito legal!'</p>\n</li>\n<li>\n<p>aspas duplas: &quot;Você vai conseguir aprender python!&quot;</p>\n</li>\n<li>\n<p>aspas triplas: '''Hello world''' &quot;&quot;&quot;Olá Mundo&quot;&quot;&quot;</p>\n</li>\n</ul>\n<p>Strings pertencem ao tipo built-in <strong>str</strong>, que pode ser usado para converter objetos não string em strings.</p>\n<p>&lt;iframe src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzdjMzhjMDljZmEwYjJiMDc0Zjk3M2YyN2E1YTUzZGFi\">https://medium.com/media/7c38c09cfa0b2b074f973f27a5a53dab</span>&quot; frameborder=0&gt;&lt;/iframe&gt;</p>\n<p>Strings são objetos imutáveis, ou seja não podem ser modificados a não ser que seja feita uma string nova.</p>\n<h2 id=\"listas\"><a class=\"anchor\" href=\"#listas\">#</a> Listas</h2>\n<p>A listé um tipo de objeto Python que nos permite armazenar uma sequência de outros objetos. Ela é útil pois nos fornece maneiras de modificar ou atualizar o conteúdo presente depois que já definimos seus objetos.</p>\n<p>Um objeto lista é construído utilizando colchetes e seus objetos são separados por vírgula. É importante salientar que a lista pode conter mais de um único tipo de objeto.</p>\n<p>&lt;iframe src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzUwZTllZjU4MDViZGNmZjUzYmE4ZWQ5NmMyOTU1ZWYz\">https://medium.com/media/50e9ef5805bdcff53ba8ed96c2955ef3</span>&quot; frameborder=0&gt;&lt;/iframe&gt;</p>\n<p>Podemos também usar expressões matemáticas dentro de uma lista; o Python irá nos retornar os resultados na lista.</p>\n<p>&lt;iframe src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzZiZmM2MDlhZjMwODJkYjExNDcwOWZjYzczMDZjM2U3\">https://medium.com/media/6bfc609af3082db114709fcc7306c3e7</span>&quot; frameborder=0&gt;&lt;/iframe&gt;</p>\n<p>Listas pertencem ao tipo built-in <strong>list</strong>, que pode ser usado para converter outros tipos de sequências em uma lista.</p>\n<p>&lt;iframe src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL21lZGlhLzc3OWYzYWM2NDNjZThkMmE5YzFlZmRhZDI0N2UxOThj\">https://medium.com/media/779f3ac643ce8d2a9c1efdad247e198c</span>&quot; frameborder=0&gt;&lt;/iframe&gt;</p>\n<h2 id=\"conclusão\"><a class=\"anchor\" href=\"#conclusão\">#</a> Conclusão</h2>\n<p>Objetos em Python se comportam de formas diferentes são bastantes abrangentes e nos trazem inúmeras possibilidades de aplicação.</p>\n<p>Revisamos vários tipos de objetos fundamentais em Python:</p>\n<ul>\n<li>\n<p>int, float: tipos numéricos</p>\n</li>\n<li>\n<p>bool: o tipo booleano. Truee Falsesão os únicos objetos do tipo booleano.</p>\n</li>\n<li>\n<p>str: o tipo de string</p>\n</li>\n<li>\n<p>list: o tipo de lista</p>\n</li>\n</ul>\n<p>Agora você teve uma leve introdução a Python, mas não pare por aqui!</p>\n<p>Vá até a documentação <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvcHQtYnIvMy90dXRvcmlhbC8=\">oficial</span> da linguagem; explore e aprenda.</p>\n",
            "tags": [
                "Ciência-da-Computação",
                "Python"
            ]
        },
        {
            "id": "http://vithor.tech/computer-science/Python/code-highlight/",
            "url": "http://vithor.tech/computer-science/Python/code-highlight/",
            "title": "Code Highlight Style test",
            "date_published": "2019-07-25T19:43:00.000Z",
            "content_html": "<p>Make sure all the code blocks highlighted correctly. All the code samples are come from the demo of <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oaWdobGlnaHRqcy5vcmc=\">https://highlightjs.org</span></p>\n<p><span id=\"more\"></span></p>\n<pre class=\" language-language-plain\"><code class=\"language-language-plain\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n</code></pre>\n<pre class=\" language-language-rust\"><code class=\"language-language-rust\">#[derive(Debug)]\npub enum State &#123;\n    Start,\n    Transient,\n    Closed,\n&#125;\n\nimpl From<&'a str> for State &#123;\n    fn from(s: &'a str) -> Self &#123;\n        match s &#123;\n            \"start\" => State::Start,\n            \"closed\" => State::Closed,\n            _ => unreachable!(),\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n<pre class=\" language-language-json\"><code class=\"language-language-json\">[\n  &#123;\n    \"title\": \"apples\",\n    \"count\": [12000, 20000],\n    \"description\": &#123;\"text\": \"...\", \"sensitive\": false&#125;\n  &#125;,\n  &#123;\n    \"title\": \"oranges\",\n    \"count\": [17500, null],\n    \"description\": &#123;\"text\": \"...\", \"sensitive\": false&#125;\n  &#125;\n]\n</code></pre>\n<pre class=\" language-language-python\"><code class=\"language-language-python\">@requires_authorization\ndef somefunc(param1='', param2=0):\n    r'''A docstring'''\n    if param1 > param2: # interesting\n        print 'Gre\\'ater'\n    return (param2 - param1 + 1 + 0b10l) or None\n\nclass SomeClass:\n    pass\n\n>>> message = '''interpreter\n... prompt'''\n</code></pre>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">&#123;</span><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>application/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token keyword\">function</span> <span class=\"token function\">$init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">checked</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>title<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>Title<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token comment\">&lt;!-- here goes the rest of the page --></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><figure class=\"highlight javascript\"><figcaption data-lang=\"javascript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function\">$initHighlight</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">block<span class=\"token punctuation\">,</span> cls</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">.</span><span class=\"token function\">search</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\bno\\-highlight\\b</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token function\">process</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0F</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>             <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> class=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>cls<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">\"</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token comment\">/* handle exception */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> classes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">checkCondition</span><span class=\"token punctuation\">(</span>classes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token operator\">&lt;</span>web<span class=\"token operator\">-</span>component<span class=\"token operator\">></span><span class=\"token punctuation\">&#123;</span>block<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>web<span class=\"token operator\">-</span>component<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>  <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">export</span> $initHighlight<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><pre class=\" language-language-cpp\"><code class=\"language-language-cpp\">#include <iostream>\n\nint main(int argc, char *argv[]) &#123;\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n&#125;\n</code></pre>\n<pre class=\" language-language-sql\"><code class=\"language-language-sql\">CREATE TABLE \"topic\" (\n    \"id\" serial NOT NULL PRIMARY KEY,\n    \"forum_id\" integer NOT NULL,\n    \"subject\" varchar(255) NOT NULL\n);\nALTER TABLE \"topic\"\nADD CONSTRAINT forum_id FOREIGN KEY (\"forum_id\")\nREFERENCES \"forum\" (\"id\");\n\n-- Initials\ninsert into \"topic\" (\"forum_id\", \"subject\")\nvalues (2, 'D''artagnian');\n</code></pre>\n<pre class=\" language-language-objectivec\"><code class=\"language-language-objectivec\">#import <UIKit/UIKit.h>\n#import \"Dependency.h\"\n\n@protocol WorldDataSource\n@optional\n- (NSString*)worldName;\n@required\n- (BOOL)allowsToLive;\n@end\n\n@property (nonatomic, readonly) NSString *title;\n- (IBAction) show;\n@end\n</code></pre>\n<pre class=\" language-language-java\"><code class=\"language-language-java\">/**\n * @author John Smith <john.smith@example.com>\n*/\npackage l2f.gameserver.model;\n\npublic abstract class L2Char extends L2Object &#123;\n  public static final Short ERROR = 0x0001;\n\n  public void moveTo(int x, int y, int z) &#123;\n    _ai = null;\n    log(\"Should not be called\");\n    if (1 > 5) &#123; // wtf!?\n      return;\n    &#125;\n  &#125;\n&#125;\n</code></pre>\n<pre class=\" language-language-swift\"><code class=\"language-language-swift\">import Foundation\n\n@objc class Person: Entity &#123;\n  var name: String!\n  var age:  Int!\n\n  init(name: String, age: Int) &#123;\n    /* /* ... */ */\n  &#125;\n\n  // Return a descriptive string for this person\n  func description(offset: Int = 0) -> String &#123;\n    return \"\\(name) is \\(age + offset) years old\"\n  &#125;\n&#125;\n</code></pre>\n<figure class=\"highlight css\"><figcaption data-lang=\"CSS\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@font-face</span></span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Chunkfive<span class=\"token punctuation\">;</span> <span class=\"token property\">src</span><span class=\"token punctuation\">:</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token string url\">'Chunkfive.otf'</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token selector\">body, .usertext</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #F0F0F0<span class=\"token punctuation\">;</span> <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #600<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> Chunkfive<span class=\"token punctuation\">,</span> sans<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>print.css<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">;</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token atrule\"><span class=\"token rule\">@media</span> print</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token selector\">a[href^=http]::after</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token function\">attr</span><span class=\"token punctuation\">(</span>href<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><pre class=\" language-language-ruby\"><code class=\"language-language-ruby\"># The Greeter class\nclass Greeter\n  def initialize(name)\n    @name = name.capitalize\n  end\n\n  def salute\n    puts \"Hello #&#123;@name&#125;!\"\n  end\nend\n\ng = Greeter.new(\"world\")\ng.salute\n</code></pre>\n<pre class=\" language-language-makefile\"><code class=\"language-language-makefile\"># Makefile\n\nBUILDDIR      = _build\nEXTRAS       ?= $(BUILDDIR)/extras\n\n.PHONY: main clean\n\nmain:\n\t@echo \"Building main facility...\"\n\tbuild_main $(BUILDDIR)\n\nclean:\n\trm -rf $(BUILDDIR)/*\n</code></pre>\n<pre class=\" language-language-go\"><code class=\"language-language-go\">package main\n\nimport \"fmt\"\n\nfunc main() &#123;\n    ch := make(chan float64)\n    ch <- 1.0e10    // magic number\n    x, ok := <- ch\n    defer fmt.Println(`exitting now\\`)\n    go println(len(\"hello world!\"))\n    return\n&#125;\n</code></pre>\n<pre class=\" language-language-bash\"><code class=\"language-language-bash\">#!/bin/bash\n\n###### CONFIG\nACCEPTED_HOSTS=\"/root/.hag_accepted.conf\"\nBE_VERBOSE=false\n\nif [ \"$UID\" -ne 0 ]\nthen\n  echo \"Superuser rights required\"\n  exit 2\nfi\n\ngenApacheConf()&#123;\n  echo -e \"# Host $&#123;HOME_DIR&#125;$1/$2 :\"\n&#125;\n</code></pre>\n<pre class=\" language-language-ini\"><code class=\"language-language-ini\">; boilerplate\n[package]\nname = \"some_name\"\nauthors = [\"Author\"]\ndescription = \"This is \\\na description\"\n\n[[lib]]\nname = $&#123;NAME&#125;\ndefault = True\nauto = no\ncounter = 1_000\n</code></pre>\n",
            "tags": []
        }
    ]
}